// Code generated by goctl. DO NOT EDIT.
// Source: modulation.proto

package transformer

import (
	"context"

	"rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CodeStatusRequest          = pb.CodeStatusRequest
	CodeStatusResponse         = pb.CodeStatusResponse
	RequestConsumptionRequest  = pb.RequestConsumptionRequest
	RequestConsumptionResponse = pb.RequestConsumptionResponse

	Transformer interface {
		// 查询消费码状态
		QueryCodeStatus(ctx context.Context, in *CodeStatusRequest, opts ...grpc.CallOption) (*CodeStatusResponse, error)
		// 用户申请消费码返回给用户
		RequestConsumption(ctx context.Context, in *RequestConsumptionRequest, opts ...grpc.CallOption) (*RequestConsumptionResponse, error)
	}

	defaultTransformer struct {
		cli zrpc.Client
	}
)

func NewTransformer(cli zrpc.Client) Transformer {
	return &defaultTransformer{
		cli: cli,
	}
}

// 查询消费码状态
func (m *defaultTransformer) QueryCodeStatus(ctx context.Context, in *CodeStatusRequest, opts ...grpc.CallOption) (*CodeStatusResponse, error) {
	client := pb.NewTransformerClient(m.cli.Conn())
	return client.QueryCodeStatus(ctx, in, opts...)
}

// 用户申请消费码返回给用户
func (m *defaultTransformer) RequestConsumption(ctx context.Context, in *RequestConsumptionRequest, opts ...grpc.CallOption) (*RequestConsumptionResponse, error) {
	client := pb.NewTransformerClient(m.cli.Conn())
	return client.RequestConsumption(ctx, in, opts...)
}
