// Code generated by goctl. DO NOT EDIT.
// Source: modulation.proto

package server

import (
	"context"

	"modulation/rpc/internal/logic"
	"modulation/rpc/internal/svc"
	"modulation/rpc/modulation"
)

type ModulationRpcServer struct {
	svcCtx *svc.ServiceContext
	modulation.UnimplementedModulationRpcServer
}

func NewModulationRpcServer(svcCtx *svc.ServiceContext) *ModulationRpcServer {
	return &ModulationRpcServer{
		svcCtx: svcCtx,
	}
}

// 查询消费码状态
func (s *ModulationRpcServer) QueryCodeStatus(ctx context.Context, in *modulation.CodeStatusRequest) (*modulation.CodeStatusResponse, error) {
	l := logic.NewQueryCodeStatusLogic(ctx, s.svcCtx)
	return l.QueryCodeStatus(in)
}

// 用户申请消费码返回给用户
func (s *ModulationRpcServer) RequestConsumption(ctx context.Context, in *modulation.RequestConsumptionRequest) (*modulation.RequestConsumptionResponse, error) {
	l := logic.NewRequestConsumptionLogic(ctx, s.svcCtx)
	return l.RequestConsumption(in)
}

// 二维码订单查询
func (s *ModulationRpcServer) OrderDetailsLogic(ctx context.Context, in *modulation.OrderDetailsReq) (*modulation.OrderDetailsResp, error) {
	l := logic.NewOrderDetailsLogicLogic(ctx, s.svcCtx)
	return l.OrderDetailsLogic(in)
}
