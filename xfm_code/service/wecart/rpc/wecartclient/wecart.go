// Code generated by goctl. DO NOT EDIT.
// Source: wecart.proto

package wecartclient

import (
	"context"

	"wecart/rpc/wecart"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PlaceAnOrderReq       = wecart.PlaceAnOrderReq
	PlaceAnOrderResp      = wecart.PlaceAnOrderResp
	PlaceAnOrderResp_Data = wecart.PlaceAnOrderResp_Data

	Wecart interface {
		PlaceAnOrderLogic(ctx context.Context, in *PlaceAnOrderReq, opts ...grpc.CallOption) (*PlaceAnOrderResp, error)
	}

	defaultWecart struct {
		cli zrpc.Client
	}
)

func NewWecart(cli zrpc.Client) Wecart {
	return &defaultWecart{
		cli: cli,
	}
}

func (m *defaultWecart) PlaceAnOrderLogic(ctx context.Context, in *PlaceAnOrderReq, opts ...grpc.CallOption) (*PlaceAnOrderResp, error) {
	client := wecart.NewWecartClient(m.cli.Conn())
	return client.PlaceAnOrderLogic(ctx, in, opts...)
}
